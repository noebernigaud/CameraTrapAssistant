[project]
name = "deepfaune"
version = "1.0.0"
description = "Wildlife detection and classification system for camera trap images"
authors = [{name = "DeepFaune Team", email = "contact@deepfaune.cnrs.fr"}]
readme = "README.md"
requires-python = ">=3.8"
license = {text = "CeCILL"}
keywords = ["wildlife", "camera-trap", "detection", "classification", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: CEA CNRS Inria Logiciel Libre License, version 2.1 (CeCILL-2.1)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "torch>=1.12.0",
    "torchvision>=0.13.0",
    "ultralytics>=8.0.0",
    "numpy>=1.21.0",
    "opencv-python>=4.5.0",
    "Pillow>=8.3.0",
    "pandas>=1.3.0",
    "matplotlib>=3.5.0",
    "reportlab>=3.6.0",
    "hachoir>=3.1.0",
    "geopy>=2.2.0",
    "tzlocal>=4.0",
    "openmeteo-requests>=1.0.0",
    "requests-cache>=0.9.0",
    "retry-requests>=1.0.0",
    "dill>=0.3.0",
]

[project.optional-dependencies]
gui = [
    "tkintermapview>=1.21",
]
build = [
    "pyinstaller>=5.0.0",
    "auto-py-to-exe>=2.20.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
]

[project.scripts]
deepfaune = "src.main:main"

[project.urls]
Homepage = "https://github.com/noebernigaud/CameraTrapAssistant"
Repository = "https://github.com/noebernigaud/CameraTrapAssistant"
Issues = "https://github.com/noebernigaud/CameraTrapAssistant/issues"

[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.pt", "*.pth", "*.onnx", "*.json", "*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"